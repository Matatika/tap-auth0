"""Schema definitions for log objects."""

from singer_sdk import typing as th

_LocationInfoObject = th.PropertiesList(
    th.Property("country_code", th.StringType),
    th.Property("country_code3", th.StringType),
    th.Property("country_name", th.StringType),
    th.Property("city_name", th.StringType),
    th.Property("latitude", th.StringType),
    th.Property("longitude", th.StringType),
    th.Property("time_zone", th.StringType),
    th.Property(
        "continent_code",
        th.StringType,
        allowed_values=[
            "AF",  # Africa
            "AN",  # Antarctica
            "AS",  # Asia
            "EU",  # Europe
            "NA",  # North America
            "OC",  # Oceania
            "SA",  # South America
        ],
    ),
)


_Auth0ClientObject = th.PropertiesList(
    th.Property("name", th.StringType),
    th.Property("version", th.StringType),
)


LogObject = th.PropertiesList(
    th.Property("date", th.DateTimeType),
    # https://auth0.com/docs/deploy-monitor/logs/log-event-type-codes
    th.Property(
        "type",
        th.StringType,
        allowed_values=[
            "acls_summary",
            "actions_execution_failed",
            "api_limit",
            "api_limit_warning",
            "appi",
            "ciba_exchange_failed",
            "ciba_exchange_succeeded",
            "ciba_start_failed",
            "ciba_start_succeeded",
            "cls",
            "cs",
            "depnote",
            "f",
            "fc",
            "fce",
            "fco",
            "fcoa",
            "fcp",
            "fcph",
            "fcpn",
            "fcpr",
            "fcpro",
            "fcu",
            "fd",
            "fdeac",
            "fdeaz",
            "fdecc",
            "fdu",
            "feacft",
            "feccft",
            "fecte",
            "fede",
            "federated_logout_failed",
            "fens",
            "feoobft",
            "feotpft",
            "fepft",
            "fepotpft",
            "fercft",
            "ferrt",
            "fertft",
            "fi",
            "flo",
            "flows_execution_completed",
            "flows_execution_failed",
            "fn",
            "forms_submission_failed",
            "forms_submission_succeeded",
            "fp",
            "fpar",
            "fpurh",
            "fs",
            "fsa",
            "fu",
            "fui",
            "fv",
            "fvr",
            "gd_auth_email_verification",
            "gd_auth_fail_email_verification",
            "gd_auth_failed",
            "gd_auth_rejected",
            "gd_auth_succeed",
            "gd_enrollment_complete",
            "gd_otp_rate_limit_exceed",
            "gd_recovery_failed",
            "gd_recovery_rate_limit_exceed",
            "gd_recovery_succeed",
            "gd_send_email",
            "gd_send_email_verification",
            "gd_send_email_verification_failure",
            "gd_send_pn",
            "gd_send_pn_failure",
            "gd_send_sms",
            "gd_send_sms_failure",
            "gd_send_voice",
            "gd_send_voice_failure",
            "gd_start_auth",
            "gd_start_enroll",
            "gd_start_enroll_failed",
            "gd_tenant_update",
            "gd_unenroll",
            "gd_update_device_account",
            "gd_webauthn_challenge_failed",
            "gd_webauthn_enrollment_failed",
            "kms_key_management_failure",
            "kms_key_management_success",
            "kms_key_state_changed",
            "limit_delegation",
            "limit_mu",
            "limit_sul",
            "limit_wc",
            "mfar",
            "mgmt_api_read",
            "oidc_backchannel_logout_failed",
            "oidc_backchannel_logout_succeeded",
            "organization_member_added",
            "passkey_challenge_failed",
            "passkey_challenge_started",
            "pla",
            "pwd_leak",
            "ip",
            "pwd_leak",
            "reset_pwd_leak",
            "ip",
            "resource_cleanup",
            "rich_consents_access_error",
            "s",
            "sapi",
            "sce",
            "scoa",
            "scp",
            "scpn",
            "scpr",
            "scu",
            "scv",
            "sd",
            "sdu",
            "seacft",
            "seccft",
            "secte",
            "sede",
            "sens",
            "seoobft",
            "seotpft",
            "sepft",
            "sepkoobft",
            "sepkotpft",
            "sepkrcft",
            "sercft",
            "sertft",
            "si",
            "signup_pwd_leak",
            "ip",
            "slo",
            "srrt",
            "ss",
            "ss_sso_failure",
            "ss_sso_info",
            "ss_sso_success",
            "ssa",
            "sscim",
            "sui",
            "sv",
            "svr",
            "too_many_records",
            "ublkdu",
            "universal_logout_failed",
            "universal_logout_succeeded",
            "w",
            "warning",
            "wn",
            "wum",
            "warning",
        ],
    ),
    th.Property("description", th.StringType),
    th.Property("connection", th.StringType),
    th.Property("connection_id", th.StringType),
    th.Property("client_id", th.StringType),
    th.Property("client_name", th.StringType),
    th.Property("ip", th.StringType),
    th.Property("hostname", th.StringType),
    th.Property("user_id", th.StringType),
    th.Property("user_name", th.StringType),
    th.Property("audience", th.StringType),
    th.Property("scope", th.ArrayType(th.StringType)),
    th.Property("strategy", th.StringType),
    th.Property("strategy_type", th.StringType),
    th.Property("log_id", th.StringType),
    th.Property("isMobile", th.BooleanType),
    th.Property("details", th.ObjectType()),
    th.Property("user_agent", th.StringType),
    th.Property("location_info", _LocationInfoObject),
    th.Property("auth0_client", _Auth0ClientObject),
    th.Property("_id", th.StringType),
    th.Property("session_connection", th.StringType),
    th.Property("client_ip", th.StringType),
)
